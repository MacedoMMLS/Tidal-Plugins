/**
 * Calculates the difference between two angles (0°-360°), `angle1` & `angle2` returned result is in decimal degrees and is signed.
 * @param angle1 First angle to compare
 * @param angle2 Second angle to compare
 * @param signed If the result is signed or absolute
 * @returns The difference in degrees
 */
export declare const angleDifference: (angle1: number, angle2: number, signed?: boolean) => number;
/**
 * Converts `angle` to 0°-360°
 * @param angle
 * @returns `angle` in 0-360°
 */
export declare const to360: (angle: number) => number;
/**
 * Rounds a number to `digits` decimal places.
 * @param num Number to round
 * @param digits Decimal places to round to
 * @returns Rounded number
 */
export declare const qRnd: (num: number, digits?: number) => number;
/**
 * Pad a number with 0's
 * @param num Number to pad.
 * @param zeros Number of digits returned number should have.
 *
 * @returns Padded number
 * @example
 * let paddedNumber = nPad(5)
 * // paddedNumber = "05"
 * let triplePaddedNumber = nPad(6, 3)
 * // triplePaddedNumber = "006"
 */
export declare const nPad: (num: number | string, zeros?: number) => string;
//# sourceMappingURL=math.d.ts.map